---
title: "Frequency analysis of an Australian Motor Third Party Liability dataset"
date: '`r Sys.Date()`'
date-format: "MMMM, YYYY"
author: "Siharath Julien"
chapters:
  - Introduction
  - Models
  - Graphs
categories: [Quasi-Poisson, Exposure, Overdispersion, Claim frequency, Autralia, ausprivauto0405]
bibliography: references.bib
fig-cap-location: top
editor: 
  markdown: 
    wrap: 72
format:
  html:     
    code-fold: true
    code-summary: "Show the code"
    css: style.scss
    theme: cosmo
    toc: true
    toc-depth: 2
vignette: >
  %\VignetteIndexEntry{quasi-Poisson frequency analysis}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}    
---

# Introduction {#sec-quasi-poisson-introduction}

```{r setup, message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Session Settings"
#| label: load-packages

# Graphs----
face_text='plain'
face_title='plain'
size_title = 14
size_text = 11
legend_size = 11

global_theme <- function() {
  theme_minimal() %+replace%
    theme(
      text = element_text(size = size_text, face = face_text),
      legend.position = "bottom",
      legend.direction = "horizontal", 
      legend.box = "vertical",
      legend.key = element_blank(),
      legend.text = element_text(size = legend_size),
      axis.text = element_text(size = size_text, face = face_text), 
      plot.title = element_text(
        size = size_title, 
        hjust = 0.5
      ),
      plot.subtitle = element_text(hjust = 0.5)
    )
}

# Outputs
options("digits" = 2)
```

```{css setup, echo = FALSE}
.justify {
  text-align: justify !important
}
```

::: callout-tip
### In Brief

The objective of this vignette is to demonstrate the application of Quasi-Poisson
regression in analyzing insurance data, specifically focusing on
the `ausprivauto0405` dataset from @charpentierCAS. This
dataset provides information on insurance contracts and claims related
to Australian motor third-party liability insurance. By leveraging Quasi-Poisson
regression, our goal is to model the frequency of claims and investigate
the factors influencing claim occurrence within the insurance data.
:::

## Required Packages

```{r libraries, message=FALSE}

required_libraries <- c(
  "tidyverse", 
  "CASdatasets",
  "MASS",
  "AER",
  "broom",
  "knitr",
  "kableExtra"
)
invisible(lapply(required_libraries, library, character.only = TRUE))
```

## Data

::: justify
The data used in this vignette come from the Australian motor third-party
liability insurance portfolio.

The first dataset, `ausprivauto0405 `, encompasses details regarding contracts
and clients obtained from an Australian insurance company, related to some motor insurance portfolio.
Third-party insurance is a compulsory insurance for vehicle owners in Australia.
It insures vehicle owners against injury caused to other drivers, passengers, or pedestrians as a result of an accident.

For clarity purposes, the `ausprivauto0405` table will be named `CLAIMS`.
:::

## Dictionaries

The list of the 9 variables from the `freMTPLfreq` dataset is reported
in @tbl-dict-ausprivauto.

::: justify
| Attribute    | Type    | Description                                                   |
|--------------|---------|---------------------------------------------------------------|
| Exposure     | Numeric | The number of policy years                                     |
| VehValue     | Numeric | The vehicle value in thousands of AUD                          |
| VehAge       | Factor  | The vehicle age group                                          |
| VehBody      | Factor  | The vehicle body group                                         |
| Gender       | Factor  | The gender of the policyholder                                 |
| DrivAge      | Numeric | The age of the policyholder                                    |
| ClaimOcc     | Factor  | Indicates occurrence of a claim                                |
| ClaimNb      | Numeric | The number of claims                                           |
| ClaimAmount  | Numeric | The sum of claim payments                                      |

: Content of the `CLAIMS` dataset: ausprivauto0405 {#tbl-dict-ausprivauto .striped .hover}

:::

## Importation

```{r load-quasi-poisson-data, output=FALSE}
#| code-fold: true
#| code-summary: "Code for importing our datasets"

data(ausprivauto0405)


CLAIMS <- ausprivauto0405 |>
  filter(Exposure > 0.70)

CLAIMS$VehAge <- CLAIMS$VehAge |> 
  factor(levels = c("youngest cars", "young cars", "old cars", "oldest cars"))


age_mapping <- c("youngest people" = 1, "young people" = 2, "working people" = 3,
                 "older work. people" = 4, "old people" = 5, "oldest people" = 6)

drivage_levels <- levels(CLAIMS$DrivAge)


CLAIMS$DrivAge <- CLAIMS$DrivAge |>
  levels() |>
  (\(drivage_levels) order(sapply(drivage_levels, function(x) age_mapping[x])))() |>
  (\(drivage_order) factor(CLAIMS$DrivAge, levels = drivage_levels[drivage_order]))()


```

# Models {#sec-quasi-poisson-models}

## Purpose

::: justify
In the domain of automobile insurance, Quasi-poisson Regression emerges as a potent tool for comprehending and forecasting accident frequencies, repair costs, and claims trends.

Through Quasi-poisson Regression, insurers gain the ability to not only anticipate forthcoming challenges but also to refine pricing strategies and ensure resilience in a dynamic landscape of risk.
:::

::: {.callout-caution appearance="simple"}
## Pay Attention

::: justify
The results from QuasiPoisson regression models are valid if:\

- the responses are independent.\
- the responses are distributed according to a Poisson distribution with
parameter Lambda.\
- There may be [overdispersion](https://en.wikipedia.org/wiki/Overdispersion) present in the data.
Quasi-Poisson regression models are appropriate for handling situations where the variance exceeds the mean in the data.
:::

:::

::: justify
In this analysis, we will explore the relationship between the response
variable `ClaimNb` and the explanatory variables `DrivAge` and
`VehAge`. This modeling framework aligns with the principles outlined
by @agresti, a prominent figure in statistical methodology, who
emphasizes the significance of considering multiple explanatory factors
in regression analysis.

To model the frequency of insurance claims, we employ a Quasi-Poisson Regression approach for the response variable `ClaimNB`, which represents the count of insurance claims and is assumed to follow a Quasi-Poisson distribution.

$$
\begin{equation}
\text{ClaimNB} \sim \text{Poisson}(\lambda),
\end{equation}
$$
where $\lambda$ is the mean rate of claims. The Quasi-Poisson regression model relates $\lambda$ on a set of predictor variables and an additional term accounting for exposure through a logarithmic link function. The logarithmic link function ensures that the predicted rate of claims is always positive, as required by the Quasi-poisson distribution. More precisely, we express the natural logarithm of $\lambda$ as a linear combination of the predictors:


$$
\begin{equation}
\log(\lambda) = \beta_0 + \beta_1 \times \text{DrivAge} + \beta_2 \times \text{VehAge} + \text{log(Exposure)},
\end{equation}
$$

In this model, `DrivAge` represents the age of the driver, `VehAge` denotes the age of the vehicle, and $\log(\text{Exposure})$ adjusts for the exposure variable. The coefficients $\beta_0$, $\beta_1$, and $\beta_2$ are estimated through regression to quantify their impact on the expected rate of claims.
:::

The estimated lambda parameter, which represents the mean of claims, is:
`r mean(CLAIMS$ClaimNb)`.

```{r lambda_parameter, lambda_parameter}
#| code-fold: false

set.seed(1234) 

theoretic_count <- rpois(nrow(CLAIMS), mean(CLAIMS$ClaimNb))

tc_df <- tibble(theoretic_count)

freq_theoretic <- prop.table(table(tc_df$theoretic_count))

freq_claim <- prop.table(table(CLAIMS$ClaimNb))

freq_theoretic_df <- tibble(
  Count = as.numeric(names(freq_theoretic)),
  Frequency = as.numeric(freq_theoretic),
  Source = "Theoretical Count"
)

freq_claim_df <- tibble(
  Count = as.numeric(names(freq_claim)),
  Frequency = as.numeric(freq_claim),
  Source = "Empirical Count"
)

freq_combined <- freq_theoretic_df |> 
  rbind(freq_claim_df)
```

The theoretical and empirical histograms associated with a Poisson
distribution are shown in @fig-plot-hist-claims.

```{r quasi-poisson-claim}
#| fig-cap: "<span style='color: #1E88E5;'>Theoretical</span> and <span style='color: black;'>empirical</span> histogram of claims in frequence"
#| label: "fig-plot-hist-claims"
#| code-fold: true
#| code-summary: "Code for the following graph"
#| fig-width: 8
#| fig-height: 5

ggplot(freq_combined, aes(x = Count, y = Frequency, fill = Source)) +
  geom_bar(stat = "identity", position = "dodge2", width = 0.3) +
  labs(x = "Claim Number", y = "Frequency", fill = "Legend") +
  theme(legend.position = "right") +
  scale_fill_manual(
    NULL,
    values = c("Empirical Count" = "black", "Theoretical Count" = "#1E88E5")
  ) +
  labs(fill = "Legend") +
  labs(x = "Claim Number", y = NULL) +
  theme(legend.position = "right")+
  global_theme()
```

```{r model}
#| code-fold: false

freg <- formula(ClaimNb ~ DrivAge + VehAge + offset(log(Exposure)))
  
reg <- glm(freg, family = quasipoisson, data = CLAIMS)

summary(reg)

```

::: justify
This is a Quasi-Poisson regression model predicting `ClaimNb` (number of
claims) with `DrivAge` and `VehAge` as predictors. The coefficients indicate the change in log count of claims
associated with each predictor level compared to a reference level. For
instance, as `DrivAge` goes from `youngest` to `old people`, the log count of
claims decreases by `r abs(round(coef(reg)['DrivAgeold people'], 2))`. Similarly, as `VehAge` increases within
each category, the log count of claims decreases.

Most coefficients are statistically significant.
:::

::: panel-tabset
## Coefficients

```{r Coefficients, warning = FALSE}
#| tbl-cap: Coefficients
#| label: tbl-poisson-coef
#| code-fold: true
#| code-summary: Code to create the table

reg_coef <- tidy(reg)


reg_coef <- reg_coef |>
  mutate(significance = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    p.value < 0.01 ~ ".",
    TRUE ~ ""
  ))

kable(reg_coef, format = "html", escape = FALSE) |>
  kable_styling(full_width = FALSE) |>
  add_footnote(c("Significance levels: *** p < 0.001, ** p < 0.01, * p < 0.05, . p.value < 0.1"), notation = "none")


```

## Count-Ratio

```{r count-ratio, warning = FALSE}
#| tbl-cap: Count Ratio
#| label: tbl-poisson-count-ratio
#| code-fold: true
#| code-summary: Code to create the table

reg_count_ratio <- tidy(exp(coef(reg)[-1]))

reg_count_ratio <- reg_count_ratio |>
  mutate(p.value = reg_coef$p.value[-1]) |>
  mutate(significance = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )) |>
  dplyr::select(-p.value)

kable(reg_count_ratio, format = "html", escape = FALSE) |>
  kable_styling(full_width = FALSE) |>
  add_footnote(c("Significance levels: *** p < 0.001, ** p < 0.01, * p < 0.05"), notation = "none")

```

::: justify
Each count ratio represents the change in count of making a claim
associated with a one-unit increase in the predictor variable, compared
to the reference category `DrivAge youngest people`. For example, a count ratio of `r coef(reg)['DrivAgeold people']` for
`DrivAge old people` implies that the count of making a claim for
individuals considered as old is approximately `r round((1-exp(coef(reg)['DrivAgeold people'])*100))`% lower compared to the
reference category. Similarly, count ratios below 1 for `VehAge`
categories suggest a decrease in the count of making a claim as the
vehicle age increases.
:::

## Confidence intervals

```{r Conf, warning = FALSE}
#| tbl-cap: Confidence intervals
#| label: tbl-poisson-ci
#| code-fold: true
#| code-summary: Code to create the table

reg_conf_int <- as.data.frame(exp(confint(reg))[-1, ])
colnames(reg_conf_int) <- c("2.5 %", "97.5 %")

reg_conf_int <- reg_conf_int |>
  mutate(p.value = reg_coef$p.value[-1]) |>
  mutate(significance = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )) |>
  dplyr::select(-p.value)

kable(reg_conf_int, format = "html", escape = FALSE) |>
  kable_styling(full_width = FALSE) |>
  add_footnote(c("Significance levels : *** p < 0.001, ** p < 0.01, * p < 0.05"), notation = "none")

  
```
:::

# Graphs {#sec-quasi-poisson-graphs}

::: panel-tabset
## DriverAge {#sec-quasi-poisson-graph-age}

```{r Visualisation-coef-age, message = FALSE}
#| fig-cap: "Count ratio and confidence interval of Driver Age"
#| label: "fig-plot-coef-age"
#| code-fold: true
#| code-summary: Code to create the following graph
#| fig-width: 8
#| fig-height: 5

count_ratio <- exp(coef(reg)[-1])
conf_int <- exp(confint(reg))[-1, ]

driver_age_vars <- grep("^DrivAge", names(count_ratio), value = TRUE)

data_age <- tibble(
  variable = driver_age_vars,
  coefficient = count_ratio[driver_age_vars], 
  lower_bound = conf_int[driver_age_vars, 1], 
  upper_bound = conf_int[driver_age_vars, 2]
)

driver_vehage_vars <- grep("^VehAge", names(count_ratio), value = TRUE)

data_vehage <- tibble(
  variable = driver_vehage_vars,
  coefficient = count_ratio[driver_vehage_vars], 
  lower_bound = conf_int[driver_vehage_vars, 1], 
  upper_bound = conf_int[driver_vehage_vars, 2]
)

data_age$variable <- factor(data_age$variable, levels = rev(driver_age_vars))

ggplot(
  data_age, 
  aes(
    x = coefficient,
    y = variable,
    xmin = lower_bound,
    xmax = upper_bound
  )
) +
  geom_point(stat = "identity", size = 3, color = "#1E88E5") +
  geom_errorbar(
    width = 0.2,
    position = position_dodge(width = 0.6),
    color = "#1E88E5"
  ) +
  labs(
    x = NULL,
    y = NULL
  ) +
  global_theme()
```

## VehicleAge {#sec-quasi-poisson-graph-vehage}

```{r visualisation-coef-vehage}
#| fig-cap: "Count ratio and confidence interval of vehicle Age "
#| label: "fig-plot-coef-vehage"
#| code-fold: true
#| code-summary: Code to create the following graph
#| fig-width: 8
#| fig-height: 5

data_vehage <- data_vehage |> 
  mutate(variable = reorder(variable, coefficient, decreasing = FALSE))

ggplot(
  data_vehage, 
  aes(
    x = coefficient,
    y = variable,
    xmin = lower_bound,
    xmax = upper_bound
  )
) +
  geom_point(
    stat = "identity",
    size = 3,
    color = "#1E88E5"
  ) +
  geom_errorbar(
    width = 0.2,
    position = position_dodge(width = 0.6),
    color = "#1E88E5"
  ) +
  labs(
    x = NULL,
    y = NULL
  ) +
  global_theme()
```
:::

# References

::: {#refs}
:::

# See also

::: justify
For more similar claim frequency datasets with a Poisson-like distribution, see
[`freMTPL`](https://dutangc.github.io/CASdatasets/reference/freMTPL.html) 
(import with `data("freMTPLfreq")`):
French automobile dataset, 
[`norauto`](https://dutangc.github.io/CASdatasets/reference/norauto.html): 
Norwegian automobile dataset (import with `data("norauto")`), 
[`beMTPL16`](https://dutangc.github.io/CASdatasets/reference/beMTPL16.html):
Belgian automobile  dataset (import with `data("beMTPL16")`),
or [`pg17trainpol`](https://dutangc.github.io/CASdatasets/reference/pricingame.html) (import with
`data("pg17trainpol")`).
:::
